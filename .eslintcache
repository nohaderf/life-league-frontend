[{"/Users/fredahon/Flatiron/code/module_5/life-league-frontend/src/components/league/LeaguesNav.js":"1","/Users/fredahon/Flatiron/code/module_5/life-league-frontend/src/components/league/LeaguePage.js":"2","/Users/fredahon/Flatiron/code/module_5/life-league-frontend/src/components/MainContainer.js":"3","/Users/fredahon/Flatiron/code/module_5/life-league-frontend/src/components/league/LeagueDetails.js":"4","/Users/fredahon/Flatiron/code/module_5/life-league-frontend/src/components/league/InnerNavBar.js":"5","/Users/fredahon/Flatiron/code/module_5/life-league-frontend/src/components/league/MatchUps.js":"6","/Users/fredahon/Flatiron/code/module_5/life-league-frontend/src/components/league/Standings.js":"7","/Users/fredahon/Flatiron/code/module_5/life-league-frontend/src/components/ScrollToTop.js":"8","/Users/fredahon/Flatiron/code/module_5/life-league-frontend/src/components/NavBar.js":"9","/Users/fredahon/Flatiron/code/module_5/life-league-frontend/src/components/friends/FindFriend.js":"10","/Users/fredahon/Flatiron/code/module_5/life-league-frontend/src/components/friends/UserCard.js":"11","/Users/fredahon/Flatiron/code/module_5/life-league-frontend/src/components/friends/Search.js":"12","/Users/fredahon/Flatiron/code/module_5/life-league-frontend/src/components/friends/UserList.js":"13","/Users/fredahon/Flatiron/code/module_5/life-league-frontend/src/components/About.js":"14","/Users/fredahon/Flatiron/code/module_5/life-league-frontend/src/components/league/NewLeague.js":"15","/Users/fredahon/Flatiron/code/module_5/life-league-frontend/src/components/Rules.js":"16","/Users/fredahon/Flatiron/code/module_5/life-league-frontend/src/components/Footer.js":"17","/Users/fredahon/Flatiron/code/module_5/life-league-frontend/src/components/league/tasks/TaskRoster.js":"18","/Users/fredahon/Flatiron/code/module_5/life-league-frontend/src/components/league/PlayerStats.js":"19","/Users/fredahon/Flatiron/code/module_5/life-league-frontend/src/index.js":"20","/Users/fredahon/Flatiron/code/module_5/life-league-frontend/src/reportWebVitals.js":"21","/Users/fredahon/Flatiron/code/module_5/life-league-frontend/src/components/friends/Friends.js":"22","/Users/fredahon/Flatiron/code/module_5/life-league-frontend/src/components/league/AddPlayers.js":"23","/Users/fredahon/Flatiron/code/module_5/life-league-frontend/src/components/league/PlayerCard.js":"24","/Users/fredahon/Flatiron/code/module_5/life-league-frontend/src/components/league/LeagueCard.js":"25","/Users/fredahon/Flatiron/code/module_5/life-league-frontend/src/components/league/tasks/TaskItem.js":"26","/Users/fredahon/Flatiron/code/module_5/life-league-frontend/src/components/league/tasks/AddTask.js":"27","/Users/fredahon/Flatiron/code/module_5/life-league-frontend/src/components/friends/FriendCard.js":"28","/Users/fredahon/Flatiron/code/module_5/life-league-frontend/src/components/profiles/Profile.js":"29","/Users/fredahon/Flatiron/code/module_5/life-league-frontend/src/components/league/Breakdown.js":"30"},{"size":989,"mtime":1612639240790,"results":"31","hashOfConfig":"32"},{"size":777,"mtime":1612642930155,"results":"33","hashOfConfig":"32"},{"size":3389,"mtime":1612818034697,"results":"34","hashOfConfig":"32"},{"size":484,"mtime":1612649206729,"results":"35","hashOfConfig":"32"},{"size":562,"mtime":1612405498787,"results":"36","hashOfConfig":"32"},{"size":861,"mtime":1612551551472,"results":"37","hashOfConfig":"32"},{"size":872,"mtime":1612549549807,"results":"38","hashOfConfig":"32"},{"size":763,"mtime":1612406349718,"results":"39","hashOfConfig":"32"},{"size":2173,"mtime":1612572745488,"results":"40","hashOfConfig":"32"},{"size":620,"mtime":1612801057862,"results":"41","hashOfConfig":"32"},{"size":737,"mtime":1612819318043,"results":"42","hashOfConfig":"32"},{"size":465,"mtime":1612452513176,"results":"43","hashOfConfig":"32"},{"size":576,"mtime":1612454314930,"results":"44","hashOfConfig":"32"},{"size":3019,"mtime":1612478900729,"results":"45","hashOfConfig":"32"},{"size":2389,"mtime":1612647713574,"results":"46","hashOfConfig":"32"},{"size":3364,"mtime":1612494270328,"results":"47","hashOfConfig":"32"},{"size":311,"mtime":1612487816110,"results":"48","hashOfConfig":"32"},{"size":1381,"mtime":1612642733118,"results":"49","hashOfConfig":"32"},{"size":1523,"mtime":1612799615613,"results":"50","hashOfConfig":"32"},{"size":601,"mtime":1612549508938,"results":"51","hashOfConfig":"32"},{"size":362,"mtime":1612215329641,"results":"52","hashOfConfig":"32"},{"size":1306,"mtime":1612816950560,"results":"53","hashOfConfig":"32"},{"size":666,"mtime":1612646388351,"results":"54","hashOfConfig":"32"},{"size":1021,"mtime":1612646359369,"results":"55","hashOfConfig":"32"},{"size":3991,"mtime":1612820069930,"results":"56","hashOfConfig":"32"},{"size":1201,"mtime":1612628633806,"results":"57","hashOfConfig":"32"},{"size":1730,"mtime":1612819566357,"results":"58","hashOfConfig":"32"},{"size":1026,"mtime":1612818912133,"results":"59","hashOfConfig":"32"},{"size":1747,"mtime":1612816724795,"results":"60","hashOfConfig":"32"},{"size":935,"mtime":1612820152625,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"f7saj8",{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/fredahon/Flatiron/code/module_5/life-league-frontend/src/components/league/LeaguesNav.js",[],"/Users/fredahon/Flatiron/code/module_5/life-league-frontend/src/components/league/LeaguePage.js",[],"/Users/fredahon/Flatiron/code/module_5/life-league-frontend/src/components/MainContainer.js",["125","126"],"/Users/fredahon/Flatiron/code/module_5/life-league-frontend/src/components/league/LeagueDetails.js",[],"/Users/fredahon/Flatiron/code/module_5/life-league-frontend/src/components/league/InnerNavBar.js",[],"/Users/fredahon/Flatiron/code/module_5/life-league-frontend/src/components/league/MatchUps.js",["127","128"],"/Users/fredahon/Flatiron/code/module_5/life-league-frontend/src/components/league/Standings.js",[],"/Users/fredahon/Flatiron/code/module_5/life-league-frontend/src/components/ScrollToTop.js",[],["129","130"],"/Users/fredahon/Flatiron/code/module_5/life-league-frontend/src/components/NavBar.js",["131","132"],"/Users/fredahon/Flatiron/code/module_5/life-league-frontend/src/components/friends/FindFriend.js",[],"/Users/fredahon/Flatiron/code/module_5/life-league-frontend/src/components/friends/UserCard.js",[],"/Users/fredahon/Flatiron/code/module_5/life-league-frontend/src/components/friends/Search.js",[],"/Users/fredahon/Flatiron/code/module_5/life-league-frontend/src/components/friends/UserList.js",["133"],"/Users/fredahon/Flatiron/code/module_5/life-league-frontend/src/components/About.js",[],"/Users/fredahon/Flatiron/code/module_5/life-league-frontend/src/components/league/NewLeague.js",["134","135"],"/Users/fredahon/Flatiron/code/module_5/life-league-frontend/src/components/Rules.js",["136"],"import React from \"react\"\nimport { Link } from \"react-router-dom\"\nimport ScrollToTop from \"./ScrollToTop\"\n\n\nfunction Rules(){\n    return (\n        <div className= \"main-div\">\n            <div className= \"rules-div\">\n                <h1>TL;DR</h1>\n                <div className=\"rules-basics\">    \n                    <p>Earn <strong>one</strong> point for every logged <strong>30-minute </strong> task dedication.</p>\n                    <p>The player with the most points at the end of the league, wins.</p>\n\n\n\n                </div>\n                <h1>THE BASICS</h1>\n                <div className=\"rules-basics\">    \n                    <ol>\n                        <li>The player who creates the league is the commissioner.</li>\n                        <li>There needs to be at least two players. Total number of players must be even. The more, the merrier.</li>\n                        <li>Players of the league (or the commissioner) will decide on the timeframe of the league. The timeframe can be chosen between four, six, or eight weeks.</li>\n                        <li>Players of the league (or the commissioner) will decide on Goal Categories. See more about Goal Categories down below.</li>\n                        <li>One point will be given for every 30 minutes a player logs in their Task progress. The points earned will be counted towards a weekly, and overall total. Time will not round up and points will only increment by one. So, if you dedicated 45 mins, you will be reward 1 point.</li>\n                        <li>A player must log their progress on the day-of in order to earn points for the day. Players forfeit the chance to log daily results, and to claim points, if not logged by 11:59PM.</li>\n                        <li>Logging points is primarily based on honor system. A player’s claims must be attested if other players of the league, or the commissioner, request proof or evidence.</li>\n                        <li>The higher the points, the higher the weekly rank. The player with the most points by the end of the league, wins.</li>\n                    </ol>                       \n                </div>\n\n                <h1>TASKS</h1>\n                <div className=\"rules-tasks\">    \n                    <ol>\n                        <li>Tasks are actions to be done in order to work towards a player's goal.</li>\n                        <li>Tasks are decided and set upon the start of each league. They cannot be changed after the league starts.</li>\n                        <li>More than one task can be added to a player’s roster</li>\n                        <li>Players of the league (or the commissioner) will decide on Goal Categories. See more about Goal Categories down below.</li>\n                        <li>Each player can decide on at beginning of the week (week-to-week basis) whether to bench a particular Task or to put a Task into their lineup. Hint: A player may want to change their lineup depending on who they’re going up against that week.</li>\n                        <li>All Tasks in a player’s weekly lineup must be given status updates to gain points. Benched Tasks stand idle and will not gain or deduct player points.</li>\n                    </ol>                       \n                </div>\n            </div>\n            <ScrollToTop />\n        </div>\n    )\n}\n\nexport default Rules;","/Users/fredahon/Flatiron/code/module_5/life-league-frontend/src/components/Footer.js",[],"/Users/fredahon/Flatiron/code/module_5/life-league-frontend/src/components/league/tasks/TaskRoster.js",["137"],"/Users/fredahon/Flatiron/code/module_5/life-league-frontend/src/components/league/PlayerStats.js",["138"],"/Users/fredahon/Flatiron/code/module_5/life-league-frontend/src/index.js",[],"/Users/fredahon/Flatiron/code/module_5/life-league-frontend/src/reportWebVitals.js",[],"/Users/fredahon/Flatiron/code/module_5/life-league-frontend/src/components/friends/Friends.js",[],"/Users/fredahon/Flatiron/code/module_5/life-league-frontend/src/components/league/AddPlayers.js",[],"/Users/fredahon/Flatiron/code/module_5/life-league-frontend/src/components/league/PlayerCard.js",[],"/Users/fredahon/Flatiron/code/module_5/life-league-frontend/src/components/league/LeagueCard.js",["139"],"import React, { useState, useEffect } from 'react';\n// import InnerNavBar from './InnerNavBar';\n// import { NavLink } from 'react-router-dom';\nimport Standings from './Standings';\nimport Breakdown from './Breakdown';\nimport AddPlayers from './AddPlayers';\n\nfunction LeagueCard({ friends, league }){\n    const [showStandings, setShowStandings] = useState(true)\n    const [showAddPlayers, setShowAddPlayers] = useState(false)\n    // const [showEditLeague, setShowEditLeague] = useState(false)\n    const [nonPlayers, setNonPlayers] = useState([])\n    const [players, setPlayers] = useState([])\n\n    //get friend ids\n    const friendIds = friends.map(friend => friend.id) // console.log(friendIds) -> returns array of friendsIds\n\n    // find nonPlayers- friends NOT in this league already -> use user_leagues join table\n    useEffect(() => {\n        fetch(`${process.env.REACT_APP_API_BASE_URL}/leagues/${league.id}`)\n        .then(r => r.json())\n        .then(leagueData => {\n            findNonPlayers(leagueData)\n            renderPlayers(leagueData)\n        })\n    }, [league.id])\n\n    function findNonPlayers(leagueObj){\n        //  finds user id's associated with league\n        const leaguePlayerIds = leagueObj.UserLeagues.map( userLeague => userLeague.user_id)\n        // console.log(leaguePlayerIds) // [89, 90, 91, 92]\n        // console.log(friendIds) // [90, 91, 92, 93, 95, 96, 97, 98]\n        // find nonPlayers -> diff between friendIds and PlayerIds\n        const notPlayerIds = friendIds.filter(id => !leaguePlayerIds.includes(id))\n        // console.log(notPlayerIds) // [93, 95, 96, 97, 98]\n\n        //get notPlayerObjs back from just their IDs now...friends is userObjs\n        //filter friendObjs to return only friend.ids that match those in array\n        const notPlayerObjArr = friends.filter(friend => notPlayerIds.includes(friend.id) )\n        // console.log(notPlayerObjArr)\n        setNonPlayers(notPlayerObjArr)\n    }\n\n    function renderPlayers(leagueObj){\n        setPlayers(leagueObj.users)\n    }\n    \n    //show player names in league\n    const usersInLeague = players.map( user => user.first_name)\n    const playerList = usersInLeague.join(\", \")\n\n\n    function handleAddPlayers(){\n        setShowAddPlayers(!showAddPlayers)\n    }\n\n    function handleNewPlayer(userLeagueData){\n        const newPlayer = friends.find(friend => friend.id === userLeagueData.user_id) \n        setPlayers([...players, newPlayer])\n        const updateNonPlayer = nonPlayers.filter(player => player.id !== userLeagueData.user_id)\n        setNonPlayers(updateNonPlayer)\n    }\n\n    // function handleDelete(){\n\n    // }\n\n    // function handleEditLeague(){\n    //     setShowEditLeague(!showEditLeague)\n    // }\n\n    function handleShowMatchUps(){\n        setShowStandings(false)\n    }\n\n    function handleShowStandings(){\n        setShowStandings(true)\n    }\n\n    return (\n        <div className=\"each-league\">\n            <nav className=\"inner-league-nav\">\n                <ul>\n                    <li>\n                        <p onClick={handleShowStandings} className=\"standings\">Standings</p> \n                    </li>\n                    <li>\n                        <p onClick={handleShowMatchUps} className=\"matchups\">Breakdown</p>   \n                    </li>\n                </ul>\n            </nav>\n             <h1>{league.name}</h1>\n             <p className=\"league-details\">Wager: {league.notes}</p>\n             <p>Players in League: {playerList}</p>\n             <button onClick={handleAddPlayers}>Add Players</button>\n            { showAddPlayers ? <AddPlayers league={league} nonPlayers={nonPlayers} onAddPlayer={handleNewPlayer} /> : null }\n             {/* <button className=\"edit-league\" onClick={handleEditLeague} >Edit League</button>\n             { showEditLeague ? } */}\n            { showStandings? <Standings league={league} /> : <Breakdown league={league} /> }\n            <hr className=\"bottom-hr\"></hr>\n        </div>\n    )\n}\n\nexport default LeagueCard;","/Users/fredahon/Flatiron/code/module_5/life-league-frontend/src/components/league/tasks/TaskItem.js",[],"/Users/fredahon/Flatiron/code/module_5/life-league-frontend/src/components/league/tasks/AddTask.js",[],"/Users/fredahon/Flatiron/code/module_5/life-league-frontend/src/components/friends/FriendCard.js",[],"/Users/fredahon/Flatiron/code/module_5/life-league-frontend/src/components/profiles/Profile.js",["140","141"],"/Users/fredahon/Flatiron/code/module_5/life-league-frontend/src/components/league/Breakdown.js",["142","143"],{"ruleId":"144","severity":1,"message":"145","line":8,"column":8,"nodeType":"146","messageId":"147","endLine":8,"endColumn":15},{"ruleId":"144","severity":1,"message":"148","line":11,"column":12,"nodeType":"146","messageId":"147","endLine":11,"endColumn":17},{"ruleId":"144","severity":1,"message":"149","line":2,"column":8,"nodeType":"146","messageId":"147","endLine":2,"endColumn":20},{"ruleId":"144","severity":1,"message":"150","line":7,"column":9,"nodeType":"146","messageId":"147","endLine":7,"endColumn":22},{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"144","severity":1,"message":"155","line":1,"column":17,"nodeType":"146","messageId":"147","endLine":1,"endColumn":27},{"ruleId":"144","severity":1,"message":"156","line":2,"column":20,"nodeType":"146","messageId":"147","endLine":2,"endColumn":30},{"ruleId":"157","severity":1,"message":"158","line":6,"column":44,"nodeType":"159","messageId":"160","endLine":6,"endColumn":46},{"ruleId":"144","severity":1,"message":"161","line":2,"column":10,"nodeType":"146","messageId":"147","endLine":2,"endColumn":19},{"ruleId":"144","severity":1,"message":"156","line":2,"column":21,"nodeType":"146","messageId":"147","endLine":2,"endColumn":31},{"ruleId":"144","severity":1,"message":"162","line":2,"column":10,"nodeType":"146","messageId":"147","endLine":2,"endColumn":14},{"ruleId":"157","severity":1,"message":"158","line":15,"column":38,"nodeType":"159","messageId":"160","endLine":15,"endColumn":40},{"ruleId":"163","severity":1,"message":"164","line":20,"column":7,"nodeType":"165","endLine":20,"endColumn":9,"suggestions":"166"},{"ruleId":"163","severity":1,"message":"167","line":26,"column":8,"nodeType":"165","endLine":26,"endColumn":19,"suggestions":"168"},{"ruleId":"144","severity":1,"message":"169","line":4,"column":12,"nodeType":"146","messageId":"147","endLine":4,"endColumn":17},{"ruleId":"144","severity":1,"message":"170","line":4,"column":19,"nodeType":"146","messageId":"147","endLine":4,"endColumn":27},{"ruleId":"144","severity":1,"message":"171","line":2,"column":8,"nodeType":"146","messageId":"147","endLine":2,"endColumn":22},{"ruleId":"144","severity":1,"message":"150","line":7,"column":9,"nodeType":"146","messageId":"147","endLine":7,"endColumn":22},"no-unused-vars","'Profile' is defined but never used.","Identifier","unusedVar","'users' is assigned a value but never used.","'MatchUpStats' is defined but never used.","'leaguePlayers' is assigned a value but never used.","no-native-reassign",["172"],"no-negated-in-lhs",["173"],"'useContext' is defined but never used.","'useHistory' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'useParams' is defined but never used.","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["174"],"React Hook useEffect has a missing dependency: 'findNonPlayers'. Either include it or remove the dependency array.",["175"],"'image' is assigned a value but never used.","'setImage' is assigned a value but never used.","'BreakdownStats' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},"Update the dependencies array to be: [id]",{"range":"180","text":"181"},"Update the dependencies array to be: [findNonPlayers, league.id]",{"range":"182","text":"183"},[710,712],"[id]",[1068,1079],"[findNonPlayers, league.id]"]